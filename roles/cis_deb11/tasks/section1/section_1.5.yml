- name: "1.5 Additional Process Hardening"
  become: yes
  block:
      - name: "1.5.1 Ensure address space layout randomization (ASLR) is enabled (Automated)"
        sysctl:
          name: kernel.randomize_va_space
          value: '2'
          state: present
          reload: true
          sysctl_set: true
          ignoreerrors: true
        when: level1|bool
   
      - name: "1.5.2 Ensure prelink is not installed (Automated)"
        apt:
          name: prelink
          state: absent
          update_cache: yes
        when: level1|bool

      - name: "1.5.3 Ensure Automatic Error Reporting is not enabled (Automated)"
        apt:
          name: apport
          state: absent
          update_cache: yes
        when: level1|bool

      - name: "1.5.4 Ensure core dumps are restricted (Automated)"
        block:
          - name: "1.5.4 | removing coredump"
            apt:
              name: systemd-coredump
              state: absent

          - name: "1.5.4 | removing coredump configuration"
            file:
              path: "{{ systemd_coredump_config_file }}"
              state: absent
            when: enable_coredumps == False

          - name: "1.5.4 | installing coredump"
            apt:
              name: systemd-coredump
              state: present
              update_cache: yes
            when: enable_coredumps|bool

          - name: "1.5.4 | enable & start coredump.socket "
            systemd:
              name: systemd-coredump.socket
              state: started
              enabled: yes
            when: enable_coredumps == True and "'systemd-coredump' in ansible_facts.packages"

          - name: "1.5.4 | check if {{ systemd_coredump_config_file }} exists"
            stat: 
              path: "{{ systemd_coredump_config_file }}"
            register: systemd_coredump_config_file_exists

          - name: "1.5.4 | create {{ systemd_coredump_config_file }} if not exists"
            copy:
              dest: "{{ systemd_coredump_config_file }}"
              content: |
                  # {{ systemd_coredump_config_file }}
                  # 
                  {{ hardening_header }}
                  [Coredump]
                  Storage=none
                  ProcessSizeMax=0
              owner: root
              group: root
              mode: 0644
            notify: "reload systemd"
            when: systemd_coredump_config_file_exists.stat.exists == False and enable_coredumps == True and 'systemd-coredump' in ansible_facts.packages

          - name: "1.5.4 | write core dump parameter to {{ systemd_coredump_config_file }}"
            block:
              - name: "1.5.4 | set Storage parameter"
                lineinfile:
                  path: "{{ systemd_coredump_config_file }}"
                  regexp: 'Storage='
                  line: 'Storage=none'
                  owner: root
                  group: root
                  mode: 0644
              - name: "1.5.4 | set ProcessSize parameter"
                lineinfile:
                  path: "{{ systemd_coredump_config_file }}"
                  regexp: 'ProcessSizeMax='
                  line: 'ProcessSizeMax=0'
                  owner: root
                  group: root
                  mode: 0644
                notify: "reload systemd"
            when: systemd_coredump_config_file_exists.stat.exists

          - name: "1.5.4 | set up hard limits for core dumps per default"
            lineinfile:
              path: "/etc/security/limits.conf"
              regexp: 'hard core'
              line: '* hard core 0'
              owner: root
              group: root
              mode: 0644

          - name: "1.5.4 | prevent setuid programs from dumping"
            sysctl:
              name: fs.suid_dumpable
              value: '0'
              state: present
              reload: true
              sysctl_set: true
              ignoreerrors: true
            when: level1|bool


  when: level1|bool
