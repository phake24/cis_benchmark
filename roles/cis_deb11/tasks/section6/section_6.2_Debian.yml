- name: "6.2.1 Ensure accounts in /etc/passwd use shadowed passwords (Automated)"
  block:
    - name: "6.2.1 Ensure accounts in /etc/passwd use shadowed passwords (Automated) | run command"
      command: awk -F':' '($2 != "x" ) { print $1 " is not set to shadowed passwords "}' /etc/passwd
      register: result
    - name: "6.2.1 Ensure accounts in /etc/passwd use shadowed passwords (Automated) | print stdout"
      debug:
        msg: |
          No result should come:
          {{ result.stdout }}
          WARNING! not ready yet, as not necessary on new VMs"
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.2
  
- name: "6.2.2 Ensure /etc/shadow password fields are not empty (Automated)"
  become: yes
  block:
    - name: "6.2.2 Ensure /etc/shadow password fields are not empty (Automated) | run command"
      command: awk -F':' '($2 == "" ) { print $1 " does not have a password "}' /etc/shadow
      register: result
    - name: "6.2.2 Ensure /etc/shadow password fields are not empty (Automated) | print stdout"
      debug:
        msg: |
          No Result should come:
          {{ result.stdout }}
          WARNING! not ready yet, as not necessary on new VMs"
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.2

- name: "6.2.3 Ensure all groups in /etc/passwd exist in /etc/group (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.3.sh"
  block:
    - name: "6.2.3 Ensure all groups in /etc/passwd exist in /etc/group (Automated) | create script"
      copy:
        src: "tmp/6.2.3.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.3 Ensure all groups in /etc/passwd exist in /etc/group (Automated) | run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.3 Ensure all groups in /etc/passwd exist in /etc/group (Automated) | delete script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.3

- name: "6.2.4 Ensure shadow group is empty (Automated)"
  become: yes
  shell: sed -ri 's/(^shadow:[^:]*:[^:]*:)([^:]+$)/\1/' /etc/group
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.4

- name: "6.2.5 Ensure no duplicate UIDs exist (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.5.sh"
  block:
    - name: "6.2.5 Ensure no duplicate UIDs exist (Automated) |-> write script"
      copy:
        src: "tmp/6.2.5.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.5 Ensure no duplicate UIDs exist (Automated) |-> run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.5 Ensure no duplicate UIDs exist (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.5

- name: "6.2.6 Ensure no duplicate GIDs exist (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.6.sh"
  block:
    - name: "6.2.6 Ensure no duplicate GIDs exist (Automated) |-> write script"
      copy:
        src: "tmp/6.2.6.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.6 Ensure no duplicate GIDs exist (Automated) |-> run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.6 Ensure no duplicate GIDs exist (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.6

- name: "6.2.7 Ensure no duplicate user names exist (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.7.sh"
  block:
    - name: "6.2.7 Ensure no duplicate user names exist (Automated) |-> copy Script" 
      copy:
        src: "tmp/6.2.7.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.7 Ensure no duplicate user names exist (Automated) |-> run Script" 
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.7 Ensure no duplicate user names exist (Automated) |-> remove Script" 
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.7

- name: "6.2.8 Ensure no duplicate group names exist (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.8.sh"
  block:
    - name: "6.2.8 Ensure no duplicate group names exist (Automated) |-> copy script"
      copy:
        src: "tmp/6.2.8.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.8 Ensure no duplicate group names exist (Automated) |-> run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.8 Ensure no duplicate group names exist (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.8

- name: "6.2.9 Ensure root PATH Integrity (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.9.sh"
  block:
    - name: "6.2.9 Ensure root PATH Integrity (Automated) |-> copy script"
      copy:
        src: "tmp/6.2.9.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.9 Ensure root PATH Integrity (Automated) |-> run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.9 Ensure root PATH Integrity (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.9

- name: "6.2.10 Ensure root is the only UID 0 account (Automated)"
  become: yes
  block:
        - command: "awk -F: '($3 == 0) { print $1 }' /etc/passwd"
          register: result
        - debug:
            msg: |
                only root should be retourned:
                {{ result.stdout_lines }}
                END
  when: level1|bool
  tags:
    - section6
    - section6.2
    - section6.2.10

- name: "6.2.11 Ensure local interactive user home directories exist (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.11.sh"
  block:
    - name: "6.2.11 Ensure local interactive user home directories exist (Automated) |-> copy script"
      copy:
        src: "tmp/6.2.11.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.11 Ensure local interactive user home directories exist (Automated) |-> run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.11 Ensure local interactive user home directories exist (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.11

- name: "6.2.12 Ensure local interactive users own their home directories (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.12.sh"
  block:
    - name: "6.2.12 Ensure local interactive users own their home directories (Automated) |-> copy script"
      copy:
        src: "tmp/6.2.12.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.12 Ensure local interactive users own their home directories (Automated) |-> run script"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.12 Ensure local interactive users own their home directories (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.12

- name: "6.2.13 Ensure local interactive user home directories are mode 750 or more restrictive (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.13.sh"
  block:
    - name: "6.2.13 Ensure local interactive user home directories are mode 750 or more restrictive (Automated)"
      copy:
        src: "tmp/6.2.13.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - name: "6.2.13 Ensure local interactive user home directories are mode 750 or more restrictive (Automated)"
      command: "/bin/bash {{ temp_script }}"
    - name: "6.2.13 Ensure local interactive user home directories are mode 750 or more restrictive (Automated) |-> remove script"
      file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.13

- name: "6.2.14 Ensure no local interactive user has .netrc files (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.14.sh"
  block:
    - copy:
        src: "tmp/6.2.14.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - command: "/bin/bash {{ temp_script }}"
    - file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.14

- name: "6.2.15 Ensure no local interactive user has .forward files (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.15.sh"
  block:
    - copy:
        src: "tmp/6.2.15.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - command: "/bin/bash {{ temp_script }}"
    - file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.15


- name: "6.2.16 Ensure no local interactive user has .rhosts files (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.16.sh"
  block:
    - copy:
        src: "tmp/6.2.16.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - command: "/bin/bash {{ temp_script }}"
    - file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.16


- name: "6.2.17 Ensure local interactive user dot files are not group or world writable (Automated)"
  become: yes
  vars:
    temp_script: "/tmp/6.2.17.sh"
  block:
    - copy:
        src: "tmp/6.2.17.sh"
        dest: "{{ temp_script }}"
        owner: root
        group: root
        mode: 0750
    - command: "/bin/bash {{ temp_script }}"
    - file:
        path: "{{ temp_script }}"
        state: absent
  when: level1|bool
  tags: 
    - section6
    - section6.2
    - section6.2.17

