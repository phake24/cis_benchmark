- name: "1.4.1 Ensure bootloader password is set (Automated)"
  become: yes
  block:
    - name: "check if {{ debian_grub_file_user_config }} exists"
      stat: 
        path: "{{ debian_grub_file_user_config }}"
      register: debian_grub_file_user_config_exists
    - name: "Create {{ debian_grub_file_user_config }} if not exist"
      file:
        path: "{{ debian_grub_file_user_config }}"
        state: touch
      when: not debian_grub_file_user_config_exists.stat.exists
    - name: "1.4.1 | configure grubv2 user {{ grub_v2_user }} to {{ debian_grub_file_user_config }}"
      lineinfile: 
        dest: "{{ debian_grub_file_user_config }}"
        regexp: "^set superusers=" 
        state: present
        insertafter: EOF
        line: 'set superusers="{{ grub_v2_user }}"'
        owner: root
        group: root
        mode: 0755

    - name: "1.4.1 | generate vault of grub password" 
      block:
          - name: "1.4.1 | create grubv2 password generation script"
            copy:
              dest: "{{ grub_v2_password_script }}"
              content: |
                  #!/bin/bash
                  echo "{{ grub_v2_password }}\n{{ grub_v2_password }}" | grub-mkpasswd-pbkdf2 | awk '/hash of / { print $NF }'
              mode: 0755
              owner: root
              group: root
            no_log: true
          - name: "1.4.1 | run grubv2 password generation script" 
            command: "/bin/sh {{ grub_v2_password_script }}"
            register: grub_v2_password_vault
            no_log: true
          - name: "1.4.1 | remove grubv2 password generation script"
            file:
                path: "{{ grub_v2_password_script }}"
                state: absent

    - name: "1.4.1 | set grubv2 password to {{ debian_grub_file_user_config }}"
      lineinfile:
        dest: "{{ debian_grub_file_user_config }}"
        regexp: "^password_pbkdf2"
        state: present
        insertafter: EOF
        line: 'password_pbkdf2 {{ grub_v2_user }} {{ grub_v2_password_vault.stdout }}'
        owner: root
        group: root
        mode: 0755
    - name: "1.4.1 | set mode unrestricted ({{ grub_password_unrestricted_files }})"
      replace: dest={{ item }} regexp='^CLASS="(((?!--unrestricted).)*)"$' replace='CLASS="\1 --unrestricted"'
      with_items: "{{ grub_password_unrestricted_files }}"
      when: grub_password_v2_unrestricted|bool
    - name: "1.4.1 | generate new grub configuration"
      command: /usr/sbin/grub-mkconfig -o /boot/grub/grub.cfg
  when: ansible_os_family == "Debian"


  #- name: "1.4.1 Ensure bootloader password is set (Automated)"
  #when: ansible_os_family == "RedHat"
